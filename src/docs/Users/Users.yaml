paths:
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos correctamente de la base de datos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa o un fallo de conexión con la base de datos.
  
  /api/users/{uid}:
    get:
      summary: Obtiene un solo usuario a partir de su ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: El ID del usuario que se desea solicitar
          schema:
            type: string
      responses:
        "200":
          description: El usuario fue obtenido correctamente de la base de datos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'    
    put:
      summary: Actualiza un usuario a partir de su ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: El ID del usuario que se desea actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/updateUser'

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por Mongo
        first_name:
          type: string
          description: El nombre del usuario
        last_name:
          type: string
          description: El apellido del usuario
        email:
          type: string
          description: El email del usuario
        password:
          type: string
          description: La contraseña del usuario, este campo es único y no puede repetirse
      example:
        _id: ObjectId("5f9d3b2b9d9d9d9d9d9d9d9d")
        first_name: Federico
        last_name: Osandón
        email: f@gmail.com
        password: $2a$10$1Z.a567asdffas5sa6.$2a$10$1Z.a567asdffas5sa6.

  requestBodies:
    updateUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              first_name:
                type: string
                description: El nombre del usuario
              last_name:
                type: string
                description: El apellido del usuario
              email:
                type: string
                description: El email del usuario
              password:
                type: string
                description: La contraseña del usuario, este campo es único y no puede repetirse
          example:
            first_name: Marisol
            last_name: Cadena
            email: correomarisol@correo.com
            password: 123
